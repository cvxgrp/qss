name: Test Builds
on: 
  push:
    branches-ignore:
      - master
jobs:
    test-build-pypi:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v3

          - name: Install Python
            uses: actions/setup-python@v3
              with:
                python-version: "3.9"

          - name: Install Twine
            run: sudo pip install twine

          - name: Create the distribution
            run: |
              git fetch --prune --unshallow --tags
              sudo python setup.py sdist bdist_wheel

    test-build-conda:
        runs-on: ubuntu-latest
# sets default shell to remove need for source to run the conda shell
        defaults:
          run:
            shell: bash -l {0}
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v3

# Much better than manual installation, original version Miniconda2-4.7.10-Linux-x86_64.sh is broken
          - name: Install Miniconda
            uses: conda-incubator/setup-miniconda@v2
            with:
              auto-activate-base: true
              activate-environment: ""
              miniconda-version: "latest"

          - name: Install the Conda Dependencies
            run: | 
              conda config --set always_yes yes --set auto_update_conda false
              conda update conda
              conda install conda-build

# run install twice due to client-size to ensure all files downloaded
# echo yes before login to prevent anaconda bug breaking automation
# git tags MUST be fetched otherwise output will be blank
# bash variables cannot be used in github actions, must use actions specific syntax and methods
          - name: Build the Anaconda Package
            id: condabuild
            run: |
              conda install anaconda-client
              conda install anaconda-client
              conda config --set anaconda_upload no
              git fetch --prune --unshallow --tags
              VERSION_FROM_GIT_TAG=$(git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-) conda build . -c conda-forge mpich
              echo '::set-output name=gitversion::$(git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-)'
